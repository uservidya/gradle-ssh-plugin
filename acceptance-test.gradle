description 'Automated acceptance test with SSH server'

buildscript {
    repositories {
        ivy { url = "$buildDir/ivy" }
        mavenCentral()
    }
    dependencies {
        classpath "org.hidetake:gradle-ssh-plugin:$version"
    }
    // avoid dependency resolution problem
    version = null
}

interface FeatureDelegate {
    void given(Closure givenClosure)
    void when(String taskPath)
    void then(Closure thenClosure)
    Task getWhen()
}

project.ext.taskDependencyMapping = [:]
tasks.whenTaskAdded { Task task ->
    (project.ext.taskDependencyMapping as Map).findAll { String path, Closure closure ->
        task == tasks.getByPath(path)
    }.each { String path, Closure closure ->
        closure(task)
    }.each { String path, Closure closure ->
        (project.ext.taskDependencyMapping as Map).remove(path)
    }
}

def feature(String name, Closure featureClosure) {
    final given = task("$name@given")
    final when = task("$name@when", dependsOn: given)
    final then = task("$name@then", dependsOn: when)
    tasks.test.dependsOn(then)

    def whenChild = null
    featureClosure.delegate = [
        given: { Closure c -> given << c },
        then:  { Closure c -> then << c },
        when:  { String taskPath ->
            when.dependsOn(taskPath)
            (project.ext.taskDependencyMapping as Map).put(taskPath) { Task task ->
                task.dependsOn(given)
                whenChild = task
            }
        },
        getWhen: { -> whenChild }
    ] as FeatureDelegate
    featureClosure.resolveStrategy = Closure.DELEGATE_FIRST
    featureClosure.call()
}

task test {
}

apply from: 'acceptance-test.feature.gradle'
