description 'Automated acceptance test with SSH server'

buildscript {
    def productProperties = new Properties()
    file('../gradle.properties').withReader { productProperties.load it }

    repositories {
        ivy { url = '../build/ivy' }
        mavenCentral()
    }

    dependencies {
        classpath "org.hidetake:gradle-ssh-plugin:${productProperties.version}"
    }
}

interface FeatureDelegate {
    void given(Closure givenClosure)
    void whenTask(Map map, Closure whenClosure)
    void then(Closure thenClosure)
}

def feature(String name, Closure featureClosure) {
    featureClosure.delegate = [
            given: { Closure givenClosure -> task("$name@given") << givenClosure },
            then: { Closure thenClosure -> task("$name@then") << thenClosure },
            whenTask: { Map map, Closure whenClosure -> task(map, "$name@when", whenClosure) },
    ] as FeatureDelegate
    featureClosure.resolveStrategy = Closure.DELEGATE_FIRST
    featureClosure.call()

    tasks.test.dependsOn(task(name))
    tasks.getByName("$name").dependsOn(tasks.getByName("$name@then"))
    tasks.getByName("$name@then").dependsOn(tasks.getByName("$name@when"))
    tasks.getByName("$name@when").dependsOn(tasks.getByName("$name@given"))
}

task test {
}

apply from: 'features.gradle'
